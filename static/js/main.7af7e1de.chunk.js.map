{"version":3,"sources":["App.js","index.js"],"names":["Topbar","className","App","props","state","tasks","id","task","status","axios","get","then","res","setState","data","event","console","log","preventDefault","post","this","componentDidMount","delete","put","size","onSubmit","e","submit","value","onChange","target","placeholder","required","validationErrors","isDefaultRequiredValue","type","name","class","map","onClick","edit","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af7e1de.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      id: 0,\r\n      task: \"\",\r\n      status: \"created\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://mytodo-app.azurewebsites.net/api/\").then((res) => {\r\n      this.setState({\r\n        tasks: res.data,\r\n        id: 0,\r\n        task: \"\",\r\n        status: \"created\",\r\n      });\r\n    });\r\n  }\r\n  submit(event, id) {\r\n    console.log(id);\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"https://mytodo-app.azurewebsites.net/api/\", {\r\n        task: this.state.task, //adding new task\r\n        status: \"created\",\r\n      })\r\n      .then(() => {\r\n        this.componentDidMount();\r\n      });\r\n  }\r\n\r\n  delete(id) {\r\n    axios.delete(\"https://mytodo-app.azurewebsites.net/api/\" + id).then(() => {\r\n      this.componentDidMount(); //deleting a completed task\r\n    });\r\n  }\r\n\r\n  edit(id) {\r\n    console.log(id)\r\n    axios.put(\"https://mytodo-app.azurewebsites.net/api/\" + id).then(() => {\r\n      this.setState({\r\n        status: \"completed\", //editing status of the task\r\n      });      \r\n      this.componentDidMount();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Topbar />\r\n        <hr size=\"1\" />\r\n\r\n        {/* Add task Section starts  */}\r\n        <div className=\"add-task\">\r\n          <form onSubmit={(e) => this.submit(e, this.state.id)}>\r\n            <div className=\"add-icon\">\r\n              &nbsp;\r\n              <input\r\n                value={this.state.task}\r\n                onChange={(e) => this.setState({ task: e.target.value })}\r\n                className=\"input-box\"\r\n                placeholder=\"Add a task\"\r\n                required\r\n                validationErrors={\r\n                  {isDefaultRequiredValue: 'Field is required'}\r\n                }\r\n              />\r\n              &nbsp;\r\n              &nbsp;\r\n              <button className=\"submit-button\" type=\"submit\" name=\"action\">\r\n              <i class=\"fas fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"three-dots\">\r\n            <i className=\"fas fa-ellipsis-v\"></i>\r\n          </div>\r\n        </div>\r\n         {/* Add task Section ends  */}\r\n\r\n{/* showing created tasks Section starts  */}\r\n         <div className=\"tasks-view\">\r\n\r\n          {\r\n              this.state.tasks.map((task) =>\r\n                // displays if task status is created\r\n                  task.status === \"created\" ?\r\n                    (\r\n                      <><div className=\"tasks-list\">\r\n                      <input className=\"checkbox\" type=\"checkbox\" onClick={(e) => this.edit(task.id)}></input>\r\n                      <div className=\" listing\">\r\n                      <p className=\"task-name\">{task.task}</p>\r\n                      <button className=\"delete-button\" onClick={(e) => this.delete(task.id)} type=\"submit\" name=\"action\">\r\n                        <i class=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                      </div><hr size=\"1\" className=\"seperation\" /></>\r\n                    )\r\n                    : null\r\n                \r\n              )\r\n          }\r\n {/* showing created task Section ends  */}\r\n\r\n {/* showing completed task Section starts  */}\r\n\r\n          {\r\n            this.state.tasks.map((task) =>\r\n            // displays if task status is completed\r\n                task.status === \"completed\" ?\r\n                  <><div className=\"tasks-list \">\r\n                  <i className=\"checkbox fas fa-check\"></i>\r\n                    <div className=\" listing\">\r\n                      <p className=\"task-name done\">{task.task}</p>\r\n                      <button className=\"delete-button\" onClick={(e) => this.delete(task.id)} type=\"submit\" name=\"action\">\r\n                        <i class=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div><hr size=\"1\" className=\"seperation\" /></>\r\n                : null            \r\n              \r\n            )\r\n          }\r\n        \r\n {/* showing completed task Section ends  */}\r\n\r\n</div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <div className=\"top-bar\">\r\n      <div className=\"title\">\r\n        <div className=\"top-title\">TASKS</div>\r\n        <div className=\"bottom-title\">\r\n          TASK &nbsp;\r\n          <i className=\"fas fa-caret-down\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"close-icon\">\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}